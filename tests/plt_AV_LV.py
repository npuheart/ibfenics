

# 主动脉瓣输入的压力图

# import matplotlib.pyplot as plt

# # Data points
# y_values = [
#     9.3049, 9.3893, 9.4737, 10.2256, 10.9774, 14.8320, 19.0662, 25.0055, 31.1215, 38.8277, 
#     46.5339, 53.3130, 59.9917, 65.7018, 71.4118, 77.0797, 81.7119, 83.7607, 85.8094, 88.5115, 91.2635, 94.2425, 
#     97.2215, 100.0674, 102.8751, 105.3496, 107.8242, 109.5297, 111.1929, 112.7385, 114.2841, 115.4339, 116.5705, 
#     117.6868, 118.7922, 119.4247, 120.0573, 120.5338, 120.9885, 121.2837, 121.5789, 121.7898, 122.0007, 122.1034, 
#     122.1895, 122.1052, 122.0209, 121.7006, 121.3613, 120.9396, 120.5144, 119.9182, 119.3220, 118.6711, 118.0021, 
#     117.1504, 116.2989, 115.4555, 114.6120, 113.6748, 112.7193, 111.6228, 110.5263, 109.1637, 107.8011, 106.3007, 
#     104.7965, 103.3487, 101.8927, 100.0371, 98.1815, 95.7399, 93.2107, 90.2299, 87.1879, 82.6742, 78.1605, 73.0977, 
#     68.0237, 61.0248, 53.9030, 46.8594, 39.9931, 34.6611, 29.3732, 24.7743, 20.1754, 16.3914, 12.6075, 10.4939, 
#     8.4500, 6.6327, 4.8651, 3.6842, 2.5033, 1.8223, 1.1691, 0.5786, -0.0051, -0.2581, -0.5111, -0.7036, -0.8772, 
#     -0.8772, -0.8772, -0.7085, -0.5398, -0.4395, -0.3509, -0.3509, -0.3509, -0.1680, 0.0169, 0.1856, 0.3543, 0.5230, 
#     0.6917, 0.7904, 0.8907, 1.0594, 1.2281, 1.3968, 1.5654, 1.6648, 1.7645, 2.0175, 2.2706, 2.4618, 2.6485, 2.8172, 
#     2.9859, 3.1545, 3.3232, 3.5088, 3.6994, 3.9524, 4.2054, 4.3758, 4.5445, 4.7312, 4.9190, 5.0877, 5.2565, 5.4423, 
#     5.6275, 5.7962, 5.9649, 6.2179, 6.4710, 6.7515, 7.0226, 7.1069, 7.1913, 7.4673, 7.7277, 7.8121
# ]

# # Scaling the x-values to fit the range [0, 0.8]
# x_values_scaled = [i / (len(y_values) - 1) * 0.8 for i in range(len(y_values))]

# # Plotting the points with the new x-values
# plt.plot(x_values_scaled, y_values, marker=' ', linestyle='-', color='red', linewidth=2.0)
# plt.xlabel("Time (s)")
# plt.ylabel("Pressure (mmHg)")
# plt.xlim(0, 0.8)
# plt.grid(True)
# plt.savefig( "plt.png", dpi=300)
# plt.show()

# #二尖瓣的输入和输出的压力差
# import matplotlib.pyplot as plt
# import numpy as np

# # 输入数据
# data0 = [
#     0.005000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.068097, 2.136194, 3.204291, 4.272388,
#     5.340485, 6.408582, 7.476679, 8.544776, 9.612873, 10.680965, 10.687970, 10.695040, 10.702219, 10.709545,
#     10.715689, 10.868642, 11.095553, 11.094094, 11.202528, 11.371355, 11.543579, 11.688901, 11.793380, 11.848601,
#     11.037837, 11.988055, 12.898200, 11.395067, -1.738548, -5.267400, -13.128287, -20.896431, -28.504174, -36.112306,
#     -43.791672, -51.351974, -58.538273, -65.248727, -71.618305, -78.042563, -84.683025, -91.344901, -97.817815,
#     -103.851267, -109.257654, -113.994060, -118.104578, -121.721091, -125.080969, -128.499543, -132.158727,
#     -135.579392, -138.303555, -140.515472, -142.404788, -144.064088, -145.522032, -146.777559, -147.811824,
#     -148.626355, -149.243963, -149.692338, -149.996466, -150.181362, -150.276776, -150.313522, -150.307688,
#     -150.233466, -150.054119, -149.740686, -149.274355, -148.651356, -147.889684, -147.022014, -146.079464,
#     -145.088579, -144.073567, -143.056403, -142.048698, -141.052432, -140.058424, -139.051018, -138.012723,
#     -136.925413, -135.771311, -134.533012, -133.195833, -131.742196, -130.134860, -128.330247, -126.294469,
#     -124.020629, -121.555428, -118.990856, -116.411676, -113.797363, -111.086169, -108.220950, -105.137418,
#     -101.749778, -97.926276, -93.459420, -88.151119, -81.842366, -74.466672, -66.116861, -57.054653, -47.663728,
#     -38.313456, -29.337129, -21.096091, -13.988047, -8.167371, -3.471500, 0.309017, 8.404448, 10.985146, 12.932094,
#     14.022835, 14.211461, 13.772360, 13.010441, 12.177900, 11.472931, 10.981590, 10.662979, 10.470815, 10.365762,
#     10.315528, 10.294817, 10.288350, 10.290333, 10.298720, 10.312533, 10.330877, 10.352537, 10.376014, 10.399534,
#     10.422540, 10.445404, 10.467828, 10.489333, 10.509526, 10.528178, 10.545245, 10.560740, 10.574782, 10.587523,
#     10.599106, 10.609683, 10.619408, 10.628423
# ]

# # 将负数替换为0
# data_1 = [max(0, value) for value in data0]
# data_2 = [0 if value > 0 else abs(value) for value in data0]


# # 横坐标，时间从 0 到 0.8 秒均匀分布
# x_values_scaled = [i / (len(data0) - 1) * 0.8 for i in range(len(data0))]

# # 绘制图形


# plt.plot(x_values_scaled, data_1, label='Left Atrial Pressure ', linestyle='--', color='blue', linewidth=2.0)
# plt.plot(x_values_scaled, data_2, label='Left Ventricular Pressure', linestyle='-', color='red', linewidth=2.0)


# plt.xlabel('Time (s)')
# plt.ylabel("Pressure (mmHg)")
# plt.xlim(0, 0.8)
# plt.ylim(-5, 180)
# plt.grid(True)
# plt.legend(loc='upper right')
# plt.savefig( "plt.png", dpi=300)
# plt.show()

#计算cook 模型右上角的位移图
